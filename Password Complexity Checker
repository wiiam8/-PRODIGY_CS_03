import tkinter as tk
from tkinter import messagebox
import string 

# Password assessment functions
def check_length(password,min_length=8):
    return len(password)>=min_length
def check_uppercase(password):
    return any(char.isupper() for char in password)
def check_lowercase(password):
    return any(char.islower() for char in password)
def check_number(password):
    return any(char.isdigit() for char in password)
def check_special_char(password):
    special_char=string.punctuation
    return any(char in special_char for char in password)
def cal_score(password):
    score=0
    if check_length(password,8):
        score += 2
    if check_length(password,12):
        score += 2
    if check_uppercase(password):
        score += 2
    if check_lowercase(password):
        score += 2
    if check_number(password):
        score += 2
    if check_special_char(password):
        score += 2
    return score
def feedback(score):
    if score<=4 :
        return "Weak password. Consider using a longer password with a mix of uppercase letters, lowercase letters, numbers, and special characters."
    elif score<=8 :
        return "Moderate password. To strengthen it, add more unique characters and increase the length."
    else:
        return "Strong password! Well done."

def password_strength(password):
    score = cal_score(password)
    f = feedback(score)
    return f

def update_feedback(event):
    password = password_entry.get()
    f = password_strength(password)
    feedback_label.config(text=f)
# GUI setup
root = tk.Tk()
root.title("Password Complexity Checker")
root.geometry("400x300")
bg_color = "#2b2b2b" 
fg_color = "#ffffff"  
entry_bg_color = "#3c3c3c" 
btn_bg_color = "#505050"  
btn_fg_color = "#ffffff"  
root.configure(bg=bg_color)
# Label
label = tk.Label(root, text="Enter your password:", font=("Arial", 14), fg=fg_color, bg=bg_color)
label.pack(pady=10)

# Entry widget for password input
password_entry = tk.Entry(root, show="*", width=30, font=("Arial", 12), fg=fg_color, bg=entry_bg_color, insertbackground=fg_color)
password_entry.pack(pady=10)

# Real-time feedback binding
password_entry.bind("<KeyRelease>", update_feedback)

# Feedback label
feedback_label = tk.Label(root, text="", font=("Arial", 12), fg=fg_color, bg=bg_color)
feedback_label.pack(pady=10)

# Button to trigger assessment
check_button = tk.Button(root, text="Check Strength", command=lambda: messagebox.showinfo("Password Strength", password_strength(password_entry.get())), font=("Arial", 12), fg=btn_fg_color, bg=btn_bg_color)
check_button.pack(pady=20)

# Password tips label
tips_label = tk.Label(root, text="Tips: Use a mix of uppercase, lowercase, numbers, and special characters. Avoid common words.", font=("Arial", 10), fg="red", bg=bg_color, wraplength=300, justify="left")
tips_label.pack(pady=10)

# the main loop
root.mainloop()
